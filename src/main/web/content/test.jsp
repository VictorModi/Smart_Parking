<%@ page import="mba.vm.smart.parking.DataSourceProvider" %>
<%@ page import="static mba.vm.smart.parking.util.ContentFetch.genRedirect" %><%@ page import="java.io.File" %>
<%@ page import="mba.vm.smart.parking.Database" %>
<%@ page import="mba.vm.smart.parking.Car_informationQueries" %>
<%@ page import="java.util.HashMap" %>
<%@ page import="mba.vm.smart.parking.frontend.ui.HTMLElement" %>
<%@ page import="org.owasp.encoder.Encode" %>
<%@ page import="java.util.stream.Collectors" %>
<%@ page import="com.google.gson.Gson" %>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%><%=genRedirect(new File(request.getRequestURI()).getName().split("\\.")[0])%><style>

    .car--info-modify-dialog-main > * {
        margin-bottom: 15px;
    }
    .car--info-modify-dialog-main:last-child {
        margin-bottom: 0;
    }
</style>
<%
    HashMap<String, String> keyDisplayNameMap = new HashMap<>();
    keyDisplayNameMap.put("license_plate", "车牌");
    keyDisplayNameMap.put("owner_name", "车主姓名");
    keyDisplayNameMap.put("contact_number", "联系电话");
    keyDisplayNameMap.put("brand", "车辆品牌");
    keyDisplayNameMap.put("model", "车辆型号");
    keyDisplayNameMap.put("color", "车辆颜色");
%>
<mdui-dialog
        close-on-esc
        close-on-overlay-click
        class="car--info-modify-dialog"
>
    <div class="car--info-modify-dialog-main">

        <mdui-text-field label="Text Field"></mdui-text-field>
        <mdui-text-field label="Text Field"></mdui-text-field>
        <mdui-text-field label="Text Field"></mdui-text-field>
        <mdui-text-field label="Text Field"></mdui-text-field>
        <mdui-text-field label="Text Field"></mdui-text-field>
    </div>
    <mdui-button slot="action" variant="text">取消</mdui-button>
    <mdui-button slot="action" variant="tonal">保存</mdui-button>
</mdui-dialog>
<div>
    <h1>车辆信息管理</h1>
    <div class="mdui-table">
        <table>
            <thead class="car--info-thead">
            <tr></tr>
            </thead>
            <tbody class="car--info-tbody">
            </tbody>
        </table>
    </div>
</div>
<script class="need-load">
    let isModifying = false;
    // nameWithDisplayObject is generated by Java and exists at initialization time.
    // Ignore the IDE's uninitialized prompt
    const nameWithDisplayObject = <%=new Gson().toJson(keyDisplayNameMap)%>;

    const infoTheadMainTr = document.querySelector(".car--info-thead").children[0];
    for (let key in nameWithDisplayObject) {
        if (nameWithDisplayObject.hasOwnProperty(key)) {
            const currentTd = document.createElement("td");
            currentTd.classList.add("car--info-column", "car--info-column-" + key);
            currentTd.innerText = nameWithDisplayObject[key];
            infoTheadMainTr.appendChild(currentTd);
        }
    }

    sendRequest("POST", API_ROOT + "data", JSON.stringify({
        "type": "CAR",
        "action": "SELECT",
        "data": {}
    }), function (result) {
        const infoTbody = document.querySelector(".car--info-tbody");
        const listData = result.data.data.list;
        console.log(listData);
        let count = 0;
        for (const car of listData) {
            count++;
            const current = document.createElement("tr");
            current.classList.add("car--info-row", "car--info-row-id-" + car["id"], "car--info-row-count-" + count);
            current.classList.add(count % 2 === 0 ? "car--info-row-even" : "car--info-row-odd");
            const fields = Object.keys(nameWithDisplayObject);
            for (const field of fields) {
                const fieldData = car[field] === undefined ? "" : car[field];
                const cell = document.createElement("td");
                const display = document.createElement("span");
                const modifyInput = document.createElement("mdui-text-field");
                display.innerText = fieldData;
                modifyInput.style.display = "none";
                modifyInput.setAttribute("variant", "filled");
                modifyInput.setAttribute("label", nameWithDisplayObject[field]);
                modifyInput.setAttribute("value", fieldData);
                cell.classList.add("car--info-row-field", "car--info-row-field-" + field)
                cell.addEventListener("dblclick", function () {
                    if (isModifying === false) {
                        isModifying = true;
                        display.style.display = "none";
                        modifyInput.style.display = "block";
                        modifyInput.focus();
                    }
                });
                modifyInput.addEventListener("blur", function () {
                    const currentValue = $(this).val();
                    if (currentValue !== display.textContent) {
                        window.mdui.dialog({
                            headline: "提示",
                            description: "当前文本框 (" + "第 " + count + " 行 - " + nameWithDisplayObject[field] + ") 已修改, 是否保存?",
                            actions: [
                                {
                                    text: "取消",
                                },
                                {
                                    text: "确定",
                                    onClick: () => {
                                        // display.innerText = currentValue;
                                        const data = {
                                            "type": "CAR",
                                            "action": "UPDATE",
                                            "data": {
                                                "id": car["id"],
                                            }
                                        }
                                        data.data[field] = currentValue;
                                        sendRequest("POST", API_ROOT + "data", JSON.stringify(data), function () {
                                            window.mdui.snackbar({message: "修改成功"})
                                            display.innerText = currentValue
                                        }, function (res) {
                                            window.mdui.snackbar({message: "修改失败。"})
                                        }, undefined, "application/json")
                                    },
                                }
                            ],
                            onClosed: () => {
                                isModifying = false;
                                modifyInput.style.display = "none";
                                display.style.display = "block";
                            }
                        });
                    } else {
                        isModifying = false;
                        modifyInput.style.display = "none";
                        display.style.display = "block";
                    }
                });
                cell.appendChild(display);
                cell.appendChild(modifyInput);
                current.appendChild(cell);
            }

            infoTbody.appendChild(current);
        }
    }, undefined, undefined, "application/json")

</script>
